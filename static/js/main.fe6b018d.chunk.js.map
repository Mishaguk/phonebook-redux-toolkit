{"version":3,"sources":["Components/ContactItem/Phonebook.module.css","Components/InputForm/PhonebookEditor.module.css","Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.js","redux/phoneBook/phoneBookActions.js","redux/phoneBook/selectors.js","Components/ContactList/ContactList.js","redux/phoneBook/phonebookOperations.js","Components/InputForm/InputForm.jsx","Components/Filter/Filter.jsx","Components/App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","ContactItem","React","memo","contact","name","phone","id","onDelete","console","log","className","styles","PhonebookText","type","button","onClick","addContactRequest","createAction","addContactSucces","addContactError","deleteContactRequest","deleteContactSucces","deleteContactError","fetchContactRequest","fetchContactSucces","fetchContactError","filterContact","getFilter","state","phoneBookReducer","filter","getLoading","loading","ContactList","dispatch","useDispatch","useSelector","contacts","items","toLowerCase","includes","getContacts","handleDelete","useCallback","actions","axios","delete","then","catch","error","operations","map","InputForm","useState","setName","setPhone","isExists","find","getIsContactExists","PhonebookEditor","onSubmit","e","preventDefault","toastr","warning","post","response","data","value","onChange","target","pattern","title","required","PhonebookEditorButton","Filter","input","placeholder","App","isLoading","useEffect","get","color","height","width","timeout","initialState","createReducer","action","payload","combineReducers","store","configureStore","reducer","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe6b018d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Phonebook_button__3Ks78\",\"PhonebookText\":\"Phonebook_PhonebookText__1GQCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookEditor\":\"PhonebookEditor_PhonebookEditor__22oTt\",\"PhonebookEditorButton\":\"PhonebookEditor_PhonebookEditorButton__1rcqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3bmqf\",\"input\":\"Filter_input__12Sh9\"};","import styles from './Phonebook.module.css';\r\nimport React from 'react';\r\n\r\nconst ContactItem = React.memo(\r\n\t({ contact: { name, phone, id }, onDelete }) =>\r\n\t\tconsole.log('render', id) ||\r\n\t\t(name && (\r\n\t\t\t<li>\r\n\t\t\t\t<p className={styles.PhonebookText}>\r\n\t\t\t\t\t{name} {phone}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\t\tonClick={() => onDelete(id)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t</li>\r\n\t\t))\r\n);\r\n\r\nexport default ContactItem;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSucces = createAction('contacts/addSucces');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactSucces = createAction('contacts/deleteSucces');\r\nexport const deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchRequest');\r\nexport const fetchContactSucces = createAction('contacts/fetchSucces');\r\nexport const fetchContactError = createAction('contacts/fetchError');\r\n\r\n// export const contactAdd = createAction('ADD_CONTACT');\r\nexport const deleteContact = createAction('DELETE_CONTACT');\r\nexport const filterContact = createAction('FILTER_CONTACT');\r\n","export const getContacts = filter => state =>\r\n\tfilter\r\n\t\t? state.phoneBookReducer.items.filter(({ name }) =>\r\n\t\t\t\tname.toLowerCase().includes(filter.toLowerCase())\r\n\t\t  )\r\n\t\t: state.phoneBookReducer.items;\r\n\r\nexport const getIsContactExists = name => {\r\n\treturn state =>\r\n\t\t!!state.phoneBookReducer.items.find(contact => contact.name === name);\r\n};\r\n\r\nexport const getFilter = state => state.phoneBookReducer.filter;\r\n\r\nexport const getLoading = state => state.phoneBookReducer.loading;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport { useCallback } from 'react';\r\nimport * as operations from '../../redux/phoneBook/phonebookOperations';\r\nimport { getContacts, getFilter } from '../../redux/phoneBook/selectors';\r\n\r\nconst ContactList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst filter = useSelector(getFilter);\r\n\tconst contacts = useSelector(getContacts(filter));\r\n\r\n\tconst handleDelete = useCallback(\r\n\t\tid => dispatch(operations.deleteContact(id)),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{contacts.map(contact => (\r\n\t\t\t\t<ContactItem\r\n\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ContactList;\r\n","import * as actions from './phoneBookActions';\r\nimport axios from 'axios';\r\n\r\nexport const addContact = contact => dispatch => {\r\n\tdispatch(actions.addContactRequest());\r\n\r\n\taxios\r\n\t\t.post(\r\n\t\t\t'https://61ae5b08a7c7f3001786f7d3.mockapi.io/api/v1/contacts',\r\n\t\t\tcontact\r\n\t\t)\r\n\t\t.then(response => {\r\n\t\t\tdispatch(actions.addContactSucces(response.data));\r\n\t\t})\r\n\t\t.catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n\tdispatch(actions.deleteContactRequest());\r\n\taxios\r\n\t\t.delete(`https://61ae5b08a7c7f3001786f7d3.mockapi.io/api/v1/contacts/${id}`)\r\n\t\t.then(() => dispatch(actions.deleteContactSucces(id)))\r\n\t\t.catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n\tdispatch(actions.fetchContactRequest());\r\n\taxios\r\n\t\t.get('https://61ae5b08a7c7f3001786f7d3.mockapi.io/api/v1/contacts')\r\n\t\t.then(({ data }) => dispatch(actions.fetchContactSucces(data)))\r\n\t\t.catch(error => dispatch(actions.fetchContactError(error)));\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './PhonebookEditor.module.css';\r\n\r\nimport toastr from 'toastr';\r\nimport { getIsContactExists } from '../../redux/phoneBook/selectors';\r\nimport * as operations from '../../redux/phoneBook/phonebookOperations';\r\n\r\nconst InputForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [name, setName] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst isExists = useSelector(getIsContactExists(name));\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (isExists) {\r\n\t\t\ttoastr.warning(`Contact ${name} is already exists`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdispatch(\r\n\t\t\toperations.addContact({\r\n\t\t\t\tname,\r\n\t\t\t\tphone,\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetName('');\r\n\t\tsetPhone('');\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className={styles.PhonebookEditor} onSubmit={handleSubmit}>\r\n\t\t\t\t<h2>Name</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>Number</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='tel'\r\n\t\t\t\t\tname='number'\r\n\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\tonChange={e => setPhone(e.target.value)}\r\n\t\t\t\t\tpattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n\t\t\t\t\ttitle='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button className={styles.PhonebookEditorButton} type='submit'>\r\n\t\t\t\t\tAdd contact\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../redux/phoneBook/phoneBookActions';\r\nimport { getFilter } from '../../redux/phoneBook/selectors';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst filter = useSelector(getFilter);\r\n\r\n\tconst handleChange = e => {\r\n\t\tdispatch(actions.filterContact(e.target.value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<label className={styles.filter}>\r\n\t\t\t<span>filter</span>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Type to filter contacts'\r\n\t\t\t\tvalue={filter}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></input>\r\n\t\t</label>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from 'react';\r\nimport ContactList from './ContactList/ContactList';\r\nimport InputForm from './InputForm/InputForm';\r\nimport Filter from './Filter/Filter';\r\nimport { getLoading } from '../redux/phoneBook/selectors';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport * as operations from '../redux/phoneBook/phonebookOperations';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst App = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isLoading = useSelector(getLoading);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(operations.fetchContacts());\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Phonebook</h1>\r\n\t\t\t<InputForm />\r\n\t\t\t<Filter />\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<Loader\r\n\t\t\t\t\ttype='Circles'\r\n\t\t\t\t\tcolor='#00BFFF'\r\n\t\t\t\t\theight={100}\r\n\t\t\t\t\twidth={100}\r\n\t\t\t\t\ttimeout={3000} //3 secs\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<ContactList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import * as actions from './phoneBookActions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\nconst initialState = {\r\n\titems: [],\r\n\tfilter: '',\r\n\tloading: false,\r\n};\r\n\r\nconst contactAdd = (state, action) => [...state, action.payload];\r\nconst deleteContact = (state, action) =>\r\n\tstate.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer(initialState.items, {\r\n\t[actions.addContactSucces]: contactAdd,\r\n\t[actions.deleteContactSucces]: deleteContact,\r\n\t[actions.fetchContactSucces]: (state, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n\t[actions.filterContact]: (state, action) => action.payload,\r\n});\r\n\r\n\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n\t[actions.addContactRequest]: () => true,\r\n\t[actions.addContactSucces]: () => false,\r\n\t[actions.addContactError]: () => false,\r\n\t[actions.deleteContactRequest] : () => true,\r\n\t[actions.deleteContactSucces]: () => false,\r\n\t[actions.deleteContactError]: () => false,\r\n\t[actions.fetchContactRequest]: () => true,\r\n\t[actions.fetchContactSucces]: () => false,\r\n\t[actions.fetchContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import phoneBookReducer from './phoneBook/phoneBookReducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({\r\n\treducer: { phoneBookReducer },\r\n});\r\n\r\nexport default store;\r\n","import reactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\n\r\ntoastr.options = {\r\n\tcloseButton: false,\r\n\tdebug: false,\r\n\tnewestOnTop: false,\r\n\tprogressBar: false,\r\n\tpositionClass: 'toast-top-right',\r\n\tpreventDuplicates: false,\r\n\tonclick: null,\r\n\tshowDuration: '300',\r\n\thideDuration: '1000',\r\n\ttimeOut: '5000',\r\n\textendedTimeOut: '1000',\r\n\tshowEasing: 'swing',\r\n\thideEasing: 'linear',\r\n\tshowMethod: 'fadeIn',\r\n\thideMethod: 'fadeOut',\r\n};\r\nreactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}